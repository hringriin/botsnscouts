/*
 *******************************************************************
 *        Bots 'n' Scouts - Multi-Player networked Java game       *
 *                                                                 *
 * Copyright (C) 2005 scouties.                                *
 * Contact botsnscouts-devel@sf.net                                *
 *******************************************************************

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, in version 2 of the License.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program, in a file called COPYING in the top
 directory of the Bots 'n' Scouts distribution; if not, write to 
 the Free Software Foundation, Inc., 59 Temple Place, Suite 330, 
 Boston, MA  02111-1307  USA
 
 *******************************************************************/


package de.botsnscouts.build;

import java.io.*;
import java.util.*;

public class GenerateTilesIndex{

  

    public static void main(String[] args){
	if (args.length==0){
	    System.err.println("usage: java GenerateTilesIndex <pathToTilesDir>");
	    throw new RuntimeException();
	}

	new GenerateTilesIndex().generate(args[0]);
    }

    public void generate(String dirname){
	File dir=new File(dirname);

	SuffixFilter filter=new SuffixFilter();
	filter.setSuffix("rra");
	File[] tiles=dir.listFiles(filter);
	filter.setSuffix("spf");
	File[] boards=dir.listFiles(filter);

	Properties prop=new Properties();
	prop.setProperty("numTiles",""+tiles.length);
	prop.setProperty("numSpf",""+boards.length);
	for (int i=0;i<tiles.length;i++)
	    prop.setProperty("tile"+i,tiles[i].getName());
	for (int i=0;i<boards.length;i++){
	    String data=boards[i].getName();
	    // cut off .spf ending
	    data=data.substring(0,data.length()-4);
	    prop.setProperty("spf"+i,data);
	}

	FileOutputStream out;
	try{
	    out=new FileOutputStream(dirname+System.getProperty("file.separator")+"tile.index");
	}catch(FileNotFoundException e){
	    System.err.println("couldn't open output file!");
	    throw new RuntimeException();
	}
	try{
	    prop.store(out,"Index for tiles and boards. Autogenerated by GenerateTilesIndex");
	    out.close();
	}catch(IOException e){
	    System.err.println("couldn't write to output file!");
	    throw new RuntimeException();
	}
    }

    private class SuffixFilter implements FilenameFilter{
	private String suffix;
	public void setSuffix(String s){ suffix=s; }
	public boolean accept(File dir, String name){
	    try{
	        return(name.toLowerCase().endsWith(suffix));
	    } catch(Throwable t){return false;}
	}
    }
}

